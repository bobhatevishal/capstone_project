pipeline {
    agent any

    environment {
        // Nexus, Docker, and Credentials IDs (update these according to your Jenkins setup)
        GIT_CRED = 'githubcredentials'
        NEXUS_CRED = 'nexuscredentials'
        NEXUS_URL = 'http://10.0.2.183:8081/repository/maven-releases/'
        IMAGE_NAME = 'capstone-app'
        DOCKER_CRED = 'dockerhub-credentials'
    }

    stages {

        stage('Clone') {
            steps {
                git branch: 'main', 
                    url: 'https://github.com/bobhatevishal/capstone_project.git', 
                    credentialsId: "$githubcredentials"
            }
        }

        stage('Build') {
            steps {
                sh 'echo "Building Application...."'
                // example: mvn clean package -DskipTests
            }
        }

        stage('Unit Tests') {
            steps {
                sh 'echo "Running Unit Tests..."'
                // example: mvn test
            }
        }

        stage('Security Scan - Trivy') {
            steps {
                sh '''
                echo "Running Trivy Scan..."
                trivy fs . > trivy_report.txt || true
                '''
            }
        }

        stage('Secrets Scan - Gitleaks') {
            steps {
                sh '''
                echo "Running Gitleaks..."
                gitleaks detect --source . --report-format json --report-path gitleaks_report.json || true
                '''
            }
        }

        stage('Upload Artifact to Nexus') {
            steps {
                sh '''
                echo "Uploading artifact to Nexus..."
                # Example if Maven project:
                mvn deploy -DaltDeploymentRepository=nexus::default::${NEXUS_URL}
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                echo "Building Docker Image..."
                docker build -t ${IMAGE_NAME}:latest .
                '''
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKER_CRED}", usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "Pushing Docker image..."
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    docker tag ${IMAGE_NAME}:latest $DOCKER_USER/${IMAGE_NAME}:latest
                    docker push $DOCKER_USER/${IMAGE_NAME}:latest
                    '''
                }
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                echo "Deploying application..."
                # Example:
                docker run -d -p 8080:8080 --name capstone-app ${IMAGE_NAME}:latest
                '''
            }
        }
    }
}
